---
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: 📦 Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: 📚 Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install --no-interaction --no-ansi

      - name: 🧼 Lint with Ruff
        run: poetry run ruff .

      - name: 🧽 Format check with Black
        run: poetry run black --check .

      - name: 🔀 Sort imports with isort
        run: poetry run isort --check-only .

      - name: 🔎 Static type check with Mypy
        run: poetry run mypy .

      - name: 🧪 Run tests with coverage
        run: |
          poetry run coverage run --rcfile=.coveragerc -m pytest
          poetry run coverage xml -o coverage.xml
          poetry run coverage report --rcfile=.coveragerc
          poetry run coverage html

      - name: Upload coverage reports to Codecov
        if: success() && matrix.python-version == '3.12'
        uses: codecov/codecov-action@v5
        with:
          files: coverage.xml                # be explicit
          flags: py${{ matrix.python-version }}
          # Omit token for public repos; add it if private:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: Doogie201/NextLevelApex
          fail_ci_if_error: true
          verbose: true

      - name: 🧾 Verify htmlcov/ directory and contents
        if: always()
        run: |
          echo "🕵️ Checking for htmlcov/..."
          if [ -d "htmlcov" ]; then
            echo "✅ htmlcov/ directory FOUND. Listing contents:"
            ls -lAR htmlcov/
          else
            echo "❌ htmlcov/ directory NOT FOUND in $(pwd)."
            exit 1
          fi

      - name: 📤 Upload coverage report
        if: github.event_name == 'push' && matrix.python-version == '3.12'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/
          if-no-files-found: error
          retention-days: 7
          overwrite: true

      - name: 🚨 Enforce minimum coverage threshold
        run: poetry run coverage report --rcfile=.coveragerc --fail-under=85
